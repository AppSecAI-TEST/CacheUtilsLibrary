{"name":"CacheUtilsLibrary","tagline":"A simple Android utils library to write any type of data into cache files and read them later.","body":"# CacheUtilsLibrary\r\n\r\nThis is a simple Android utils library to write any type of data into cache files and then read them later, using `Gson` to serialize and deserialize these data.\r\n\r\n##Gradle\r\n```Groovy\r\ncompile 'com.lifeofcoding:cacheutilslibrary:1.0.0@aar'\r\n```\r\n\r\nIf you have errors like:\r\n\r\n```\r\nduplication file during packaging of APK ...\r\nPath in archive: META-INF/LICENSE.txt\r\n...\r\n```\r\nPlease add such code in your `android` entry of your `build.gradle` file:\r\n\r\n```Groovy\r\npackagingOptions {\r\n    exclude 'META-INF/DEPENDENCIES'\r\n    exclude 'META-INF/NOTICE'\r\n    exclude 'META-INF/LICENSE'\r\n    exclude 'META-INF/LICENSE.txt'\r\n    exclude 'META-INF/NOTICE.txt'\r\n    exclude 'META-INF/ASL2.0'\r\n    exclude 'META-INF/MANIFEST.MF'\r\n}\r\n```\r\n\r\n##Configuration\r\nYou need to configure `CacheUtilsLibrary` in your `Application` class.\r\n\r\n```Java\r\npublic class MyApplication extends Application {\r\n\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();\r\n        // configure CacheUtilsLibrary\r\n        CacheUtils.configureCache(this);\r\n    }\r\n}\r\n```\r\n\r\nDon't forget to declare the `MyApplication` class in your `AndroidManifest.xml` file.\r\n\r\n\r\n##Usage\r\nAll sample code can be found in the [MainActivity](https://github.com/westlinkin/CacheUtilsLibrary/blob/master/sample/src/main/java/com/lifeofcoding/cacheutilslibrary_sample/MainActivity.java) file. \r\n#####Cache `String` File\r\n```Java\r\n// write\r\nCacheUtils.writeFile(CACHE_FILE_STRING, CACHE_FILE_CONTENT_STRING);\r\n\r\n// read\r\nString fileContent = CacheUtils.readFile(CACHE_FILE_STRING);\r\n```\r\n\r\n#####Cache `Map<String, T>` File\r\n```Java\r\n// write\r\nCacheUtils.writeDataMapFile(CACHE_FILE_MAP, getCacheFileContentMap());\r\n\r\n// read\r\nMap<String, Object> mapData = CacheUtils.readDataMapFile(CACHE_FILE_MAP);\r\n\r\n// get mapData\r\nprivate static Map<String, Object> getCacheFileContentMap() {\r\n    Map<String, Object> mapData = new HashMap<>();\r\n    mapData.put(\"firstItem\", \"item0\");\r\n    mapData.put(\"secondItem\", 1);\r\n    mapData.put(\"thirdItem\", false);\r\n    return mapData;\r\n}\r\n```\r\n\r\n#####Cache `List<Map<String, T>` File\r\n```Java\r\n// write\r\nCacheUtils.writeDataMapsFile(CACHE_FILE_LIST_MAP, getCacheFileContentListMap());\r\n\r\n// read\r\nList<Map<String, Object>> listMapData = CacheUtils.readDataMapsFile(CACHE_FILE_LIST_MAP);\r\n\r\n// get listMapData\r\nprivate static List<Map<String, Object>> getCacheFileContentListMap() {\r\n    List<Map<String, Object>> listMapData = new ArrayList<Map<String, Object>>();\r\n\r\n    for (int i = 0; i < 4; i++) {\r\n        Map<String, Object> item = new HashMap<>();\r\n        item.put(\"firstItemAt\" + i, \"item0At\" + i);\r\n        item.put(\"secondItemAt\" + i, 1 + i);\r\n        item.put(\"thirdItemAt\" + i, i % 2 == 0);\r\n        listMapData.add(item);\r\n    }\r\n    return listMapData;\r\n}\r\n```\r\n#####Cache `Object` File\r\n```Java\r\n// write\r\nCacheUtils.writeObjectFile(CACHE_FILE_OBJECT, MyClass.SAMPLE_MYCLASS_1);\r\n\r\n// read\r\nMyClass myClassSample = CacheUtils.readObjectFile(CACHE_FILE_OBJECT, new TypeToken<MyClass>(){}.getType());\r\n```\r\nYou can see `MyClass` and `MyClass.SAMPLE_MYCLASS_1` [here](https://github.com/westlinkin/CacheUtilsLibrary/blob/master/sample/src/main/java/com/lifeofcoding/cacheutilslibrary_sample/MyClass.java) and [here](https://github.com/westlinkin/CacheUtilsLibrary/blob/master/sample/src/main/java/com/lifeofcoding/cacheutilslibrary_sample/MyClass.java#L46).\r\n\r\n#####Cache `List<Object>` File\r\n```Java\r\n// write\r\nCacheUtils.writeObjectFile(CACHE_FILE_LIST_OBJECT, getCacheFileContentListObject());\r\n\r\n// read\r\nList<MyClass> myClassList = CacheUtils.readObjectFile(CACHE_FILE_LIST_OBJECT, new TypeToken<List<MyClass>>(){}.getType());\r\n\r\n// get List<MyClass> data\r\nprivate static List<MyClass> getCacheFileContentListObject() {\r\n    List<MyClass> listObject = new ArrayList<>();\r\n    listObject.add(MyClass.SAMPLE_MYCLASS_1);\r\n    listObject.add(MyClass.SAMPLE_MYCLASS_2);\r\n    listObject.add(MyClass.SAMPLE_MYCLASS_3);\r\n    return listObject;\r\n}\r\n\r\n```\r\n\r\n##License\r\n\r\n\tCopyright 2015 Wesley Lin\r\n\r\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\r\n\tyou may not use this file except in compliance with the License.\r\n\tYou may obtain a copy of the License at\r\n\r\n    \thttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\n\tUnless required by applicable law or agreed to in writing, software\r\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\r\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\tSee the License for the specific language governing permissions and\r\n\tlimitations under the License.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}